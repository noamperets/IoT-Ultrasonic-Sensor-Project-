/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String message;
  float ultraSonic;
  bool led;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#define TRIGGER_PIN 5  // GPIO 5 (D1)
#define ECHO_PIN 4     // GPIO 4 (D2)
#define LED_PIN D4     // GPIO 2 (D4)

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you'll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  // Initialize the ultrasonic sensor
  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(LED_PIN, OUTPUT);
  
}

void loop() {
  ArduinoCloud.update();

  // Measure distance using the ultrasonic sensor
  digitalWrite(TRIGGER_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);
  float distance = pulseIn(ECHO_PIN, HIGH) * 0.034 / 2;

  if (distance >= 2 && distance <= 400)
  {
    Serial.print("Distance: ");
    Serial.print(distance);
    Serial.println(" cm");
  
    // Update the distance variable in the Arduino IoT Cloud
    ultraSonic = distance; // Update the value in the cloud
    led = digitalRead(LED_PIN);
    
    if (ArduinoCloud.connected()) {
      // Publish the distance to the cloud only if connected
      ArduinoCloud.update();
    }
    
    // Control the LED based on distance
    if (distance < 20) {
      digitalWrite(LED_PIN, LOW); // Turn off LED (RED)
    } else {
      digitalWrite(LED_PIN, HIGH); // Turn on LED (GREEN)
    }
    
    
    if (distance < 5)
    {
      message = "Should I call an ambulance?";
    }
    else if (distance < 10) 
    {
      message = "Be careful!";
    }
    else if (distance < 20)
    {
      message = "You're about to hit the wall!";
    }
    
    
    delay(500);
  }
}







/*
  Since UltraSonic is READ_WRITE variable, onUltraSonicChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onUltraSonicChange()  {
  // Add your code here to act upon UltraSonic change
}

/*
  Since Led is READ_WRITE variable, onLedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLedChange()  {
  // Add your code here to act upon Led change
}

/*
  Since Message is READ_WRITE variable, onMessageChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMessageChange()  {
  // Add your code here to act upon Message change
  
      if ((message == "No"))
      {
        message = "Glad to hear you're ok, you had me worried.";
      }
      else if (message == "Yes")
      {
        message = "calling 911";
      }
}