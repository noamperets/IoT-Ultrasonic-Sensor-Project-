# README for Untitled_mar02a.ino

## Overview
This Arduino sketch is designed to work with the Arduino IoT Cloud platform. It utilizes an ultrasonic sensor to measure distance and controls an LED based on the measured distance. Additionally, it communicates with the cloud to update variables such as `ultraSonic`, `led`, and `message`. The sketch includes functions that are automatically generated by the Arduino IoT Cloud Thing for handling variable changes from the IoT Cloud Dashboard.

## Prerequisites
Before uploading and running this sketch on your device, make sure you have the following:

1. Board compatible with the Arduino IoT Cloud.
2. Arduino IoT Cloud account - [Arduino IoT Cloud](https://create.arduino.cc/iot/).
3. Required libraries installed. You can install them using the Arduino Library Manager.

## Hardware Setup
Connect the hardware components as follows:

- **Ultrasonic Sensor:**
  - Trigger Pin (TRIGGER_PIN): Connect to GPIO 5 (D1) on the board.
  - Echo Pin (ECHO_PIN): Connect to GPIO 4 (D2) on the board.

- **LED:**
  - Use the built-in led, which is GPIO 2 (D4) on the esp8266, adjust with your board.

## Configuration
1. Open the `thingProperties.h` file and update it with your IoT Cloud credentials and Thing properties.

```cpp
#define THING_ID ""
#define THING_PSW ""
#define THING_NAME "Untitled"
```

2. Set up the Arduino IoT Cloud Dashboard with the necessary widgets for the `message`, `ultraSonic`, and `led` variables.

## Usage
1. Upload the sketch to your board.
2. Monitor the serial output for debugging information.
3. Use the Arduino IoT Cloud Dashboard to interact with the variables and observe their changes in real-time.

## Troubleshooting
If you encounter any issues, consider the following:

- Check the hardware connections.
- Verify that the Arduino IoT Cloud credentials in the `thingProperties.h` file are correct.
- Ensure the required libraries are installed.

## Additional Notes
- The ultrasonic sensor is used to measure distance in centimeters.
- The LED is controlled based on the measured distance.
- The `message` variable is updated based on distance changes and can trigger actions such as displaying warnings or calling for help.

Feel free to customize the sketch and add additional functionality based on your requirements.

**Note:** This README assumes basic familiarity with Arduino and the Arduino IoT Cloud platform. If you encounter any difficulties, refer to the official Arduino documentation and community forums for assistance.